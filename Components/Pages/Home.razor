@page "/"
@using Plugin.Maui.Audio
@inject IAudioManager AudioManager
@inject MarkdownService MarkdownService

<div class="bg-black min-h-screen">
    <h1 class="tall:pt-8 text-center text-white text-3xl font-serif">Russian Alphabet</h1>
    <h2 class="tall:pt-4 text-center text-white text-xl font-serif fst-italic">@((MarkupString)_currentDescription)</h2>
    <div>
        <div class="grid tall:grid-cols-5 wide:grid-cols-7 gap-1 p-2">
            @foreach (var letter in _letters)
            {
                if ("Ю" == letter.ToUpper())
                {
                    <button @onclick="() => HandleLetterClick(letter.ToUpper())"
                            class="tall:col-start-3 mt-4 bg-black text-white text-xl active:font-bold font-serif py-2 px-4 rounded">
                        @letter
                    </button> 
                }
                else if ("Я" == letter.ToUpper())
                {
                    <button @onclick="() => HandleLetterClick(letter.ToUpper())"
                            class="tall:col-start-5 mt-4 bg-black text-white text-xl hover:font-bold font-serif py-2 px-4 rounded">
                        @letter
                    </button> 
                }
                else
                {
                    <button @onclick="() => HandleLetterClick(letter.ToUpper())"
                            class="alphabet mt-4 bg-black text-white text-xl hover:font-bold font-serif py-2 px-4 rounded">
                        @letter
                    </button> 
                }
            }
        </div>
        <div class="flex justify-center pt-4">
            <div class="border-2 border-white flex justify-center" >
               <button @onclick="() => _letters = _letters.Select(a => a.ToUpper()).ToList()" class="text-white px-2 font-serif">
                   Uppercase
               </button>
               <div class="text-white font-serif">
                   |
               </div>
               <button @onclick="() => _letters = _letters.Select(a => a.ToLower()).ToList()" class="text-white px-2 font-serif">
                   Lowercase
               </button>   
            </div>
        </div>
    </div>
</div>

@code {

  private List<string> _letters = ["A", "Б", "В", "Г", "Д", "Е", "Ё", "Ж", "З", "И", "Й", "К", "Л", "М", "Н", "О", "П", "Р", "С", "Т", "У", "Ф", "Х", "Ц", "Ч", "Ш", "Щ", "Ъ", "Ы", "Ь", "Э", "Ю", "Я"];

  private string _currentDescription = "Tap letter see how it's pronounced";
  
  private readonly Dictionary<string, string> _letterDescriptions = new Dictionary<string, string>
  {
      { "A", "f**a**ther" },
      { "Б", "**b**ad" },
      { "В", "**v**ine" },
      { "Г", "**g**o" },
      { "Д", "**v**ine" },
      { "Е", "**v**ine" },
      { "Ё", "**v**ine" },
      { "Ж", "**v**ine" },
      { "З", "**v**ine" },
      { "И", "**v**ine" },
      { "Й", "**v**ine" },
      { "К", "**v**ine" },
      { "Л", "**v**ine" },
      { "М", "**v**ine" },
      { "Н", "**v**ine" },
      { "О", "**v**ine" },
      { "П", "**v**ine" },
      { "Р", "**v**ine" },
      { "С", "**v**ine" },
      { "Т", "**v**ine" },
      { "У", "**v**ine" },
      { "Ф", "**v**ine" },
      { "Х", "**v**ine" },
      { "Ц", "**v**ine" },
      { "Ч", "**v**ine" },
      { "Ш", "**v**ine" },
      { "Щ", "**v**ine" },
      { "Ъ", "**v**ine" },
      { "Ы", "**v**ine" },
      { "Ь", "**v**ine" },
      { "Э", "**v**ine" },
      { "Ю", "**v**ine" },
      { "Я", "**v**ine" },
  };
  
  private async Task PlayAudio(string letter)
  {
      var file = await FileSystem.OpenAppPackageFileAsync($"wwwroot/sounds/{letter}.m4a");
      var audioPlayer = AudioManager.CreatePlayer(file);

      audioPlayer.Play();
  }

  private void SetDescription(string newDescription)
  {
      _currentDescription = MarkdownService.ConvertToHtml(_letterDescriptions.GetValueOrDefault(newDescription, "Error"));
  }

  private async Task HandleLetterClick(string letter)
  {
      SetDescription(letter);
      await PlayAudio(letter);
  }

}